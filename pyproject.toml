[project]
name = "soxyproxy"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = []

[project.optional-dependencies]
auth = [
    "passlib>=1.7.4",
]

[dependency-groups]
dev = [
    "black>=24.10.0",
    "httpx>=0.27.2",
    "pytest-asyncio>=0.24.0",
    "pytest>=8.3.3",
    "ruff>=0.8.0",
]

[tool.ruff]
target-version = "py312"
line-length = 79
exclude = [
  ".venv",
]
lint.ignore = [
  "PLR0913", # Too many arguments to function call
  "RUF001", # Docstring contains ambiguous chars
  "RUF002", # Docstring contains ambiguous chars
  "RUF003", # Docstring contains ambiguous chars
]
lint.flake8-tidy-imports.ban-relative-imports = "all"
lint.select = [
  "F", # Pyflakes
  "C90", # mccabe
   "I", # isort
   "N", # pep8-naming
  # "D", # pydocstyle
  "UP", # pyupgrade
  "YTT", # flake8-2020
#   "ANN", # flake8-annotations
  # "ASYNC", # flake8-async
  "S", # flake8-bandit
   "BLE", # flake8-blind-except
  # "FBT", # flake8-boolean-trap
  "B", # flake8-bugbear
   "A", # flake8-builtins
#  "COM", # flake8-commas
  # "CPY", # flake8-copyright
  "C4", # flake8-comprehensions
  # "DTZ", # flake8-datetimez
  "T10", # flake8-debugger
  # "DJ", # flake8-django
   "EM", # flake8-errmsg
   "EXE", # flake8-executable
#  "ISC", # flake8-implicit-str-concat
   "ICN", # flake8-import-conventions
  "G", # flake8-logging-format
  "INP", # flake8-no-pep420
   "PIE", # flake8-pie
  "T20", # flake8-print
  # "PYI", # flake8-pyi
  # "PT", # flake8-pytest-style
  # "Q", # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
   "SLOT", # flake8-slots
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
   "TCH", # flake8-type-checking
   "INT", # flake8-gettext
   "ARG", # flake8-unused-arguments
  "PTH", # flake8-use-pathlib
   "TD", # flake8-todos
   "FIX", # flake8-fixme
#  "ERA", # eradicate
  # "PD", # pandas-vet
   "PGH", # pygrep-hooks
#  "PL", # Pylint
   "TRY", # tryceratops
   "FLY", # flynt
  # "NPY", # NumPy-specific rules
  # "AIR", # Airflow
   "PERF", # Perflint
   "FURB", # refurb
   "LOG", # flake8-logging
  "RUF", # Ruff-specific rules
]

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true
