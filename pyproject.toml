[project]
name = "soxyproxy"
version = "0.0.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = []
license = {file = "LICENSE"}
authors = [
    {name = "Aleksandr Shpak", email = "shpaker@gmail.com"},
]
classifiers = [
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Topic :: Internet :: Proxy Servers",
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["proxy", "socks", "socks4", "socks4a", "socks4", "socks5h"]

[project.urls]
Homepage = "https://github.com/shpaker/soxyproxy/"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = ["soxy"]

[dependency-groups]
dev = [
  "pytest-asyncio>=0.24.0",
  "pytest>=8.3.3",
  "ruff>=0.8.0",
  "pre-commit>=4.0.1",
  "mypy>=1.13.0",
]

[project.scripts]
soxy = "soxy:__main__"

[tool.ruff]
target-version = "py312"
line-length = 120
exclude = [
  ".venv",
]
lint.flake8-tidy-imports.ban-relative-imports = "all"
lint.select = [
  "F", # Pyflakes
  "C90", # mccabe
  "I", # isort
  "N", # pep8-naming
  # "D", # pydocstyle
  "UP", # pyupgrade
  "YTT", # flake8-2020
  "ANN", # flake8-annotations
  "ASYNC", # flake8-async
  "S", # flake8-bandit
  "BLE", # flake8-blind-except
  # "FBT", # flake8-boolean-trap
  "B", # flake8-bugbear
  "A", # flake8-builtins
  #  "COM", # flake8-commas
  # "CPY", # flake8-copyright
  "C4", # flake8-comprehensions
  # "DTZ", # flake8-datetimez
  "T10", # flake8-debugger
  # "DJ", # flake8-django
  "EM", # flake8-errmsg
  "EXE", # flake8-executable
  # "ISC", # flake8-implicit-str-concat
  "ICN", # flake8-import-conventions
  "G", # flake8-logging-format
  "INP", # flake8-no-pep420
  "PIE", # flake8-pie
  "T20", # flake8-print
  # "PYI", # flake8-pyi
  # "PT", # flake8-pytest-style
  # "Q", # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SLOT", # flake8-slots
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
  "TCH", # flake8-type-checking
  "INT", # flake8-gettext
  "ARG", # flake8-unused-arguments
  "PTH", # flake8-use-pathlib
  "TD", # flake8-todos
  "FIX", # flake8-fixme
  "ERA", # eradicate
  # "PD", # pandas-vet
  "PGH", # pygrep-hooks
  "PL", # Pylint
  "TRY", # tryceratops
  "FLY", # flynt
  # "NPY", # NumPy-specific rules
  # "AIR", # Airflow
  "PERF", # Perflint
  "FURB", # refurb
  "LOG", # flake8-logging
  "RUF", # Ruff-specific rules
]

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.mypy]
python_version = "3.12"
follow_imports = "silent"
check_untyped_defs = true
strict_optional = true
